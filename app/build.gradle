plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

//apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'com.smttcn.safebox'
    compileSdkVersion 33
    //buildToolsVersion 33.0.1

    def toIncreaseBuildNo = false
    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def code = versionProps['VERSION_CODE'].toInteger()
        if (toIncreaseBuildNo) {
            code = code + 1
            versionProps['VERSION_CODE'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        }

        defaultConfig {
            applicationId "com.smttcn.safebox"
            minSdkVersion 26
            targetSdkVersion 33
            versionCode code
            versionName "1.0"
            multiDexEnabled true
            setProperty("archivesBaseName", "safebox")
            vectorDrawables.useSupportLibrary = true
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties["keyAlias"].toString()
            keyPassword keystoreProperties["keyPassword"].toString()
            storePassword keystoreProperties["storePassword"].toString()
            storeFile file('../keystore.jks')
        }
        debug {
            keyAlias keystoreProperties["keyAlias"].toString()
            keyPassword keystoreProperties["keyPassword"].toString()
            storePassword keystoreProperties["storePassword"].toString()
            storeFile file('../keystore.jks')
        }
    }

    buildTypes {
        debug {
            debuggable = true
            //applicationIdSuffix = '.debug'
        }
        release {
            debuggable = false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding true
    }

    packagingOptions {
        // to exclude the atomic functions module from the package and prevent warnings.
        //exclude 'META-INF/atomicfu.kotlin_module'
        exclude 'DebugProbesKt.bin'
    }
}

android.applicationVariants.all { variant ->
    variant.outputs.all {
        def appName = "safebox"
        outputFileName = "../../../../../" + appName + "-${variant.versionName}.${variant.versionCode}.apk"
    }
}

dependencies {
    // local copy library
    implementation project(path: ':crypto')
    implementation project(path: ':imageviewer')
    implementation project(path: ':pdfview-library')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.20"
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.exifinterface:exifinterface:1.3.0-alpha01'
    implementation "androidx.activity:activity-ktx:1.1.0"

//    // sqlite
//    implementation "androidx.sqlite:sqlite:2.0.1"

//    // SQLCipher
//    implementation 'net.zetetic:android-database-sqlcipher:4.3.0'

    // UI
    implementation "com.google.android.material:material:1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.2.0-alpha04"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"


//    // Room components
//    def room_version = "2.2.3"
//    implementation "androidx.room:room-runtime:$room_version"
//    implementation "androidx.room:room-ktx:$room_version"
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    // For Kotlin use kapt instead of annotationProcessor
//    kapt "androidx.room:room-compiler:$room_version"
//    androidTestImplementation "androidx.room:room-testing:$room_version"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    kapt "androidx.lifecycle:lifecycle-compiler:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8"

    // preference
    implementation 'androidx.preference:preference:1.1.1'

    // Afollestad Material Dialogs
    implementation "com.afollestad.material-dialogs:core:3.3.0"
    implementation "com.afollestad.material-dialogs:input:3.3.0"
    implementation "com.afollestad.material-dialogs:lifecycle:3.3.0"

    // Testing
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
